extends ../layout/layout

block title
    title Zunka - Categoria do Mercado Livre

block append internal_style
    style.
        section {
            margin-bottom: 1em;
        }
        section > h2:first-child {
            margin-top: 0;
            margin-bottom: .5em;
            color: var(--green);
        }
        section .group h3 {
            margin: 0
            color: var(--black-darkest);
        }
        section .group p {
            margin: 0 0 0.7em 0;
            color: var(--black-dark);
        }
        section .group a {
            display: block;
            display: flex;
            flex-flow: row wrap;
            margin-top: .0em;
            margin-bottom: .7em;
            color: var(--green);
            cursor: pointer;
        }
        section .group a:hover {
            color: var(--green);
            text-decoration: underline;
        }
        section .group select {
            margin-bottom: .7em;
        }
        section .group .attributes > p.attribute-name {
            font-weight: bold;
            margin-top: .5em;
            margin-left: 2em;
            margin-bottom: .1em;
        }
        section .group .attributes > p {
            margin-left: 4em;
            margin-bottom: .1em;
        }
        section .group .attributes .values > p {
            margin-left: 6em;
            margin-bottom: .1em;
        }

block content 
    section
        //- name
        h2= category.name

        //- zunka category
        .group
            h3 Categoria da Zunka
            select(id='category' onchange='updateZunkaCategory(this)')
                each productCategory in productCategories
                    option(value=productCategory, selected= productCategory == category.zunkaCategory) #{productCategory}   

        //- id
        .group
            h3 Id
            p= category.id

        //- api category link
        .group
            h3 API Categoria
            a(href=`https://api.mercadolibre.com/categories/${category.id}`) https://api.mercadolibre.com/categories/!{category.id}

        //- api atributos link
        .group
            h3 API Atributos
            a(href=`https://api.mercadolibre.com/categories/${category.id}/attributes`) https://api.mercadolibre.com/categories/!{category.id}/attributes

        .group
            if category.attributes.length
                h3 Atributos
                .attributes
                    each attribute in category.attributes
                        p.attribute-name= attribute.name
                        p id: !{attribute.id}
                        if attribute.value_type
                            p value_type: !{attribute.value_type}
                        if attribute.value_max_length
                            p value_max_length: !{attribute.value_max_length}
                        if attribute.hint
                            p hint: !{attribute.hint}
                        if attribute.tooltip
                            p tooltip: !{attribute.tooltip}
                        if attribute.values
                            p values
                            .values
                                each value in attribute.values
                                    p= value.name


        input.btn-primary(type='button', value='Recarregar do Mercado Livre', onclick='update()')
        input.btn-danger(type='button', value='Remover', onclick='remove()')
        input.btn-exit(type='button', onclick='window.location.href="/meli/categories"', value='Sair') 

append internal_scripts
    script.
        function remove() {
            console.log(`csrfToken: ${csrfToken}`);
            //- axios.delete(`/meli/categories`, { categoryId: '!{category.id}' }, { headers: { 'csrf-token': csrfToken } })
            axios.delete(`/meli/categories/!{category.id}`, { headers: { 'csrf-token': csrfToken } })
            .then(()=>{
                window.location.href = '/meli/categories';
            })
            .catch((err)=>{
                console.error(`${err.response.status} (${err.response.statusText}) ${err.response.data}`);
                alert(`Não foi possível remover a categoria. ${err.response.data}`);
            });
        }
        function update() {
            console.log(`csrfToken: ${csrfToken}`);
            //- axios.delete(`/meli/categories`, { categoryId: '!{category.id}' }, { headers: { 'csrf-token': csrfToken } })
            axios.put(`/meli/categories/!{category.id}`, {}, { headers: { 'csrf-token': csrfToken } })
            .then(()=>{
                window.location.href = '/meli/categories/!{category.id}';
            })
            .catch((err)=>{
                console.error(`${err.response.status} (${err.response.statusText}) ${err.response.data}`);
                alert(`Não foi possível atualizar a categoria. ${err.response.data}`);
            });
        }
        function updateZunkaCategory(selecteObject) {
            //- console.log('changed select');
            //- console.log(`${selecteObject.value}`);
            axios.put(`/meli/categories/!{category.id}/zunka-category`, { productCategory: selecteObject.value }, { headers: { 'csrf-token': csrfToken } })
            .then(()=>{
                //- window.location.href = '/meli/categories/!{category.id}';
            })
            .catch((err)=>{
                console.error(`${err.response.status} (${err.response.statusText}) ${err.response.data}`);
                alert(`Não foi possível atualizar a categoria zunka. ${err.response.data}`);
            });
        }

append external_scripts
    include ../components/axios.js.pug
