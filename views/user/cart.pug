extends ../layout/layout_vue

block title
    title Zunka - Carrinho de compras

block append css
    link(rel="stylesheet" href="/css/user/cart.css" charset="utf-8")

block content 
    section
        .cart-empty(v-if='!cart.products.length')
            h2.title Ainda não existem produtos no seu carrinho de compras
        .cart(v-if='cart.products.length')
            h2.title Carrinho de compras    
            .products
                .product(v-for='product in cart.products' data-product_id='product._id')
                    a(:href='`/product/${product._id}`')
                        img(v-if='product.image' :src='`/img/${product._id}/${product.image}`')
                    .product-info
                        a.product-title(:href='`/product/${product._id}`') {{ product.title }}
                        p.product-price R$ {{ product.price | currency }}
                        .product-quantity
                            select(v-model='product.qtd' v-on:change='changeProductQtd(product)')
                                option(v-for='item in product.stockQtd', :value='item') {{ item }}
                            a(@click='removeProduct(product)') Remover
            .subtotal
                h2
                    span Subtotal ({{ cart.totalQtd }} {{ cart.totalQtd > 1 ? 'itens): ' : 'item): ' }}
                    span R$ {{ cart.totalPrice | currency }}
                input.btn-primary(type='button' value='Finalizar compra' @click='selectAddress()')
                //- Used for test.
                //- input.green(type='button' value='Update stock' @click='updateStock()')
                .info
                    h5 O preço e a disponibilidade dos itens na loja estão sujetios a mudanças.
                    h5 O carrinho é um local temporário para guardar a lista de seus ítens e reflete o preço mais recente.
        .modal(v-if='showModal')
            .modal-content
                h2 Alteração no carrinho de compras
                .products-price-changed(v-if='productsPriceChanged')
                    h3 Produto(s) com alteração de preço
                    .product(v-for='product in cart.products' v-if='product.showMsgPriceChanged')
                        a(:href='`/product/${product._id}`'): img.product(v-if='product.image' :src='`/img/${product._id}/${product.image}`')
                        div
                            p.title {{ product.title }}
                            p
                                span Preço alterado de
                                span.price &nbsp {{ product.oldPrice | currency }} 
                                span para 
                                span.price {{ product.price | currency }}
                .products-qtd-changed(v-if='productsQtdChanged')
                    h3 Produto(s) com alteração de quantidade devido ao estoque
                    .product(v-for='product in cart.products' v-if='product.showMsgQtdChanged')
                        a(:href='`/product/${product._id}`'): img.product(v-if='product.image' :src='`/img/${product._id}/${product.image}`')
                        div
                            p.title {{ product.title }}
                            p
                                span Quantidade alterada de
                                span.qtd &nbsp {{ product.oldQtd }} &nbsp
                                span para 
                                span.qtd &nbsp {{ product.qtd }} &nbsp
                                span unidade(s).
                .products-removed(v-if='cart.removedProducts.length')
                    h3 Produto(s) removido(s) por falta de estoque
                    .product(v-for='removedProduct in cart.removedProducts')
                        a(:href='`/product/${removedProduct._id}`'): img.product(v-if='removedProduct.image' :src='`/img/${removedProduct._id}/${removedProduct.image}`')
                        p.title {{ removedProduct.title }}
                input.btn-primary(type='button' @click='userReceiveMsgCartChanged()' value='Ok')

append internal_scripts
  script.
    let user = !{JSON.stringify(user)};
    let cart = !{JSON.stringify(cart)};

append external_scripts
  include ../components/accounting.js.pug
  script(src='/js/user/cart.js?0002') 
