extends ../layout/layout

block title
    title Zoom - Pedido

block append css
    link(rel="stylesheet" href="/css/admin/zoomOrder.css?0001" charset="utf-8")

block content 
    section.shadow
        h2.title(class=zoomOrder.status.toLowerCase())
            span [Zoom] Pedido&nbsp
            case zoomOrder.status.toLowerCase()
                when 'new'
                    span novo
                when 'approvedpayment'
                    span pago
                when 'processed'
                    span Processando
                when 'shipped'
                    span enviado
                when 'delivered'
                    span entregue
                when 'canceled'
                    span cancelado
                default
                    span [Erro] #{zoomOrder.status}
        case zoomOrder.status.toLowerCase()
            when 'new'
                h3(class='verifyPayment') Aguarde o pagamento
            when 'approvedpayment'
                h3(class='send') Pedido deve ser processado
            when 'processed'
                h3(class='send') Pedido deve ser enviado
            when 'shipped'
                h3(class='verifyDelivery') Verificar se o pedido foi entrege
            when 'delivered'
            when 'canceled'
                h3
            default
                h3(class='') #{zoomOrder.status}
        //- h2.title(class=order.status) 
            span Pedido&nbsp
            case order.status
                when 'canceled'
                    span cancelado
                when 'delivered'
                    span entregue
                when 'shipped'
                    span enviado
                when 'paid'
                    span pago
        //- Action.
        //- case order.status
            when 'shipped'
                h3(class='verifyDelivery') Verificar se o pedido foi entrege
            when 'paid'
                h3(class='send') Pedido deve ser enviado

        h3 Data do pedido 
        p= formatDate(zoomOrder.creation_date)

        h3 Número [Zunka]
        p= order._id

        h3 Número [Zoom]
        p= zoomOrder.order_number

        //- User.
        h3 Usuário
        p=  zoomOrder.customer.first_name
        //- a(:href='`mailto:${this.order.email}`') {{ order.email }}
        a(href=`tel:${zoomOrder.customer.user_phone}`) #{zoomOrder.customer.user_phone} &nbsp [Telefone]
        p #{zoomOrder.customer.cpf} &nbsp [CPF]

        //- Address.
        h3 Destinatário
        p= zoomOrder.delivery_address.address_receiver 
        p #{zoomOrder.delivery_address.address_place},  #{zoomOrder.delivery_address.address_number} - #{zoomOrder.delivery_address.additional_info}
        p= zoomOrder.delivery_address.neighborhood
        p #{zoomOrder.delivery_address.city} - #{zoomOrder.delivery_address.state} - Brasil
        p= zoomOrder.delivery_address.zipcode 

        //- Delivery.
        h3 Envio - #{zoomOrder.shipping.shipping_method_name} - #{zoomOrder.shipping.shipping_method_id}
        p #{zoomOrder.shipping.estimate_shipping} dia(s) &nbsp - &nbsp #{formatMoney(zoomOrder.shipping.freight_price)} &nbsp&nbsp  

        // Products price.
        if zoomOrder.items
            - var totalPrice = 0
            each item in zoomOrder.items
                - totalPrice += item.total    
        // Shipping price.
        - totalPrice += zoomOrder.shipping.freight_price
        // Discount.
        if zoomOrder.total_discount_value
            - totalPrice -= zoomOrder.total_discount_value

        h3 Desconto
        if zoomOrder.total_discount_value
            p #{formatMoney(zoomOrder.total_discount_value)}
        else
            p #{formatMoney(0)}

        h3 Pagamento
        p #{formatMoney(totalPrice)}

        //- Items.
        if zoomOrder.items
            h3 Produtos
            ul
                each item in zoomOrder.items
                    li
                        - var addS = item.amount > 1 ? "s" : ""
                        a(href=`/admin/product/${item.product_id}`) #{item.product_name}
                        p #{formatMoney(item.product_price)}
                        p #{item.amount} unidade#{addS}

        //- Change order status.
        .change-status
            .buttons
                input#btn-show-set-status.btn-primary(type='button' onclick='divSetStatus.style.display = "flex"' value='value')

        //- Exit.
        input.btn-exit(type='button' onclick='javascript:history.back()' value='Sair') 

        //- Window to set status.
        #set-status
            .panel
                .item
                    h3#title-set-status message
                .buttons
                    input.btn-primary(type='button' onclick='setStatus()' value='Sim')
                    input.btn-exit(type='button' onclick='divSetStatus.style.display = "none"' value='Não')

append internal_scripts
    script.
        let order = !{JSON.stringify(order)};
        let zoomOrder = !{JSON.stringify(zoomOrder)};
        // Elements.
        let divSetStatus = document.getElementById('set-status');
        let titleSetStatus = document.getElementById('title-set-status');
        let btnShowSetStatus = document.getElementById('btn-show-set-status');
        divSetStatus.style.display = 'none';
        // Action
        let action = '';
        switch(zoomOrder.status.toLowerCase()) {
            case 'approvedpayment':
                action = 'process'
                titleSetStatus.innerHTML = 'Pedido processado?';
                btnShowSetStatus.value = 'Peido processado'
                break;
            case 'processed':
                action = 'ship'
                titleSetStatus.innerHTML = 'Pedido enviado?';
                btnShowSetStatus.value = 'Pedido enviado'
                break;
            case 'shipped':
                action = 'delivery'
                titleSetStatus.innerHTML = 'Pedido entregue?';
                btnShowSetStatus.value = 'Pedido entregue'
                break;
            default:
        }
        // Set status.
        function setStatus() {
            console.log(`action: ${action}`);
            if (action === 'process') {
                axios.post();
            }
            divSetStatus.style.display = 'none';
        }
