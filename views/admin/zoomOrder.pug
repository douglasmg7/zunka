extends ../layout/layout

block title
    title Zoom - Pedido

block append css
    link(rel="stylesheet" href="/css/admin/zoomOrder.css?0001" charset="utf-8")

block content 
    section.shadow
        h2.title(class=zoomOrder.status.toLowerCase())
            span [Zoom] Pedido&nbsp
            case zoomOrder.status.toLowerCase()
                when 'new'
                    span novo
                when 'approvedpayment'
                    span pago
                when 'processed'
                    span Processando
                when 'shipped'
                    span enviado
                when 'delivered'
                    span entregue
                when 'canceled'
                    span cancelado
                default
                    span [Erro] #{zoomOrder.status}
        case zoomOrder.status.toLowerCase()
            when 'shipped'
                h3(class='verifyDelivery') Verificar se o pedido foi entrege
            when 'paid'
                h3(class='send') Pedido deve ser enviado
            when 'canceled'
                h3
            default
                h3(class='') #{zoomOrder.status}
        //- h2.title(class=order.status) 
            span Pedido&nbsp
            case order.status
                when 'canceled'
                    span cancelado
                when 'delivered'
                    span entregue
                when 'shipped'
                    span enviado
                when 'paid'
                    span pago
        //- Action.
        //- case order.status
            when 'shipped'
                h3(class='verifyDelivery') Verificar se o pedido foi entrege
            when 'paid'
                h3(class='send') Pedido deve ser enviado

        h3 Data do pedido 
        p= formatDate(zoomOrder.creation_date)

        h3 Número [Zunka]
        p= order._id

        h3 Número [Zoom]
        p= zoomOrder.order_number

        //- User.
        h3 Usuário
        p=  zoomOrder.customer.first_name
        //- a(:href='`mailto:${this.order.email}`') {{ order.email }}
        a(href=`tel:${zoomOrder.customer.user_phone}`) #{zoomOrder.customer.user_phone} &nbsp [Telefone]
        p #{zoomOrder.customer.cpf} &nbsp [CPF]

        //- Address.
        h3 Destinatário
        p= zoomOrder.delivery_address.address_receiver 
        p #{zoomOrder.delivery_address.address_place},  #{zoomOrder.delivery_address.address_number} - #{zoomOrder.delivery_address.additional_info}
        p= zoomOrder.delivery_address.neighborhood
        p #{zoomOrder.delivery_address.city} - #{zoomOrder.delivery_address.state} - Brasil
        p= zoomOrder.delivery_address.zipcode 

        //- Delivery.
        h3 Envio - #{zoomOrder.shipping.shipping_method_name} - #{zoomOrder.shipping.shipping_method_id}
        p #{zoomOrder.shipping.estimate_shipping} dia(s) &nbsp - &nbsp #{formatMoney(zoomOrder.shipping.freight_price)} &nbsp&nbsp  

        // Payment.
        if zoomOrder.items
            - var totalPrice = 0
            each item in zoomOrder.items
                - totalPrice += item.total    
        - totalPrice += zoomOrder.shipping.freight_price
        if zoomOrder.total_discount_value
            - totalPrice -= zoomOrder.total_discount_value
        h3 Pagamento
        p #{formatMoney(totalPrice)}

        //- Items.
        if zoomOrder.items
            h3 Produtos
            ul
                each item in zoomOrder.items
                    li
                        - var addS = item.amount > 1 ? "s" : ""
                        a(href=`/admin/product/${item.product_id}`) #{item.product_name}
                        p #{formatMoney(item.product_price)}
                        p #{item.amount} unidade#{addS}

        //- //- Change order status.
        //- .change-status(v-if='order.payment && (status(order) !== "cancelado")')
            //- //- No type (older orders).
            //- .buttons(v-if='order.payment.method === undefined || order.payment.method === "paypal" || order.payment.method === "transfer" || order.payment.method === "ppp-credit"')
                //- input.btn-primary(type='button' v-if='status(order) === "aberto"' @click='showSetStatusWindow("paid")' value='Pedido pago')
                //- input.btn-primary(type='button' v-if='status(order) === "pago"' @click='showSetStatusWindow("shipped")' value='Pedido enviado')
                //- input.btn-primary(type='button' v-if='status(order) === "enviado"' @click='showSetStatusWindow("delivered")' value='Pedido entregue')
            //- //- Money (only motoboy delivery).   
            //- .buttons(v-if='order.payment.method === "money" || order.payment.method === "card-machine"')
                //- input.btn-primary(type='button' v-if='status(order) === "aberto"' @click='showSetStatusWindow("shipped")' value='Pedido enviado')
                //- input.btn-primary(type='button' v-if='status(order) === "enviado"' @click='showSetStatusWindow("delivered")' value='Pedido entregue e pago')
                //- //- input.btn-primary(type='button' v-if='status(order) === "pago"' @click='showSetStatusWindow("delivered")' value='Pedido entregue')

        //- //- Cancel order.
        //- input.btn-danger(type='button' v-if='order.timestamps.placedAt && (status(order) !== "cancelado")' @click='showSetStatusWindow("canceled")' value='Cancelar pedido')            

        //- //- Exit.
        //- //- input.btn-exit(type='button' onclick='window.location.href="/admin/users"' value='Sair') 
        //- input.btn-exit(type='button' onclick='javascript:history.back()' value='Sair') 
        //- //- input.btn-exit(type='button' onclick='window.location.reload(document.referrer);' value='Sair') 

        //- //- Window to return product to stock.
        //- .set-status(v-if='setStatusWindow.show')
            //- .panel
                //- .item
                    //- h3.title {{ setStatusWindow.message }}
                    //- .options(v-if='setStatusWindow.showCheckboxUpdateStock')
                        //- input(type='checkbox' id='updateStock' v-model:checked='setStatusWindow.updateStock')
                        //- label(for='updateStock') Voltar com o produto para o estoque
                //- .buttons
                    //- input.btn-primary(type='button' @click='setStatus()' value='Sim')
                    //- input.btn-exit(type='button' @click='setStatusWindow.show=false' value='Não')

append internal_scripts
    script.
        let order = !{JSON.stringify(order)};
        let zoomOrder = !{JSON.stringify(zoomOrder)};
