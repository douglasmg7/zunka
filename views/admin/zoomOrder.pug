extends ../layout/layout

block title
    title Zoom - Pedido

block append css
    link(rel="stylesheet" href="/css/admin/zoomOrder.css?0001" charset="utf-8")

block content 
    section.shadow
        h2.title(class=order.status) 
            span Pedido&nbsp
            case order.status
                when 'canceled'
                    span cancelado
                when 'delivered'
                    span entregue
                when 'shipped'
                    span enviado
                when 'paid'
                    span pago
        //- Action.
        case order.status
            when 'shipped'
                h3(class='verifyDelivery') Verificar se o pedido foi entrege
            when 'paid'
                h3(class='send') Pedido deve ser enviado

        h3 Data do pedido 
        p= formatDate(zoomOrder.creation_date)

        h3 Número (Zunka)
        p= order._id

        h3 Número (Zoom)
        p= zoomOrder.order_number

        //- User.
        h3 Usuário
        p=  zoomOrder.customer.first_name
        //- a(:href='`mailto:${this.order.email}`') {{ order.email }}
        a(href=`tel:${zoomOrder.customer.user_phone}`) #{zoomOrder.customer.user_phone} &nbsp [Telefone]
        p #{zoomOrder.customer.cpf} &nbsp [CPF]

        //- //- Address.
        //- h3 Destinatário
        //- p {{order.shipping.address.name}} 
        //- a(:href='`tel:${this.order.shipping.address.phone }`') {{ order.shipping.address.phone }} &nbsp [Telefone]
        //- p {{order.shipping.address.address}},  {{order.shipping.address.addressNumber}} {{order.shipping.address.addressComplement}}
        //- p {{order.shipping.address.district}}
        //- p {{order.shipping.address.city}} - {{order.shipping.address.state}} - Brasil
        //- p {{order.shipping.address.cep}} 

        //- //- Delivery.
        //- div(v-if='order.shipping.carrier')
            //- //- h3(v-if='order.shipping.carrier === "Correios"') Envio - {{ order.shipping.carrier }} ({{ order.shipping.methodDesc }} - {{ order.shipping.methodCode }})
            //- h3(v-if='order.shipping.carrier === "Correios"') Envio - {{ order.shipping.methodDesc }} - {{ order.shipping.methodCode }}
            //- h3(v-if='order.shipping.carrier !== "Correios"') Envio - {{ order.shipping.carrier }}
            //- p(v-if='order.shipping.carrier === ""') {{ order.shipping.methodDesc }}
            //- p(v-if='order.shipping.carrier !== ""') {{order.shipping.deadline}} dia(s) &nbsp&nbsp {{order.shipping.price | formatMoney}} &nbsp&nbsp  
            //- p P={{ order.shipping.box.weight | gramsToKg }}kg &nbsp&nbsp C={{ order.shipping.box.length }}cm &nbsp&nbsp A={{ order.shipping.box.height }}cm &nbsp&nbsp L={{ order.shipping.box.width }}cm
            //- //- Deprected:begin - still here because old orders.
            //- p(v-if='order.shipping.method === "correios" || order.shipping.method === "standard"') Correios
            //- p(v-if='order.shipping.method === "motoboy"') Motoboy
            //- //- Deprected:end.

        //- //- Payment.
        //- div(v-if='order.payment')
            //- h3(v-if='order.payment.method === "money"') Pagamento - dinheiro
            //- h3(v-if='order.payment.method === "card-machine"') Pagamento - cartão presencial
            //- h3(v-if='order.payment.method === "transfer"') Pagamento - transferência
            //- h3(v-if='order.payment.method === "paypal" || order.payment.method === undefined') Pagamento - Paypal
            //- h3(v-if='!order.payment.pppExecutePayment && (order.payment.method === "ppp-credit")') Pagamento - cartão de crédito 
            //- h3(v-if='order.payment.pppExecutePayment && (order.payment.method === "ppp-credit")' :title='`${order.payment.pppExecutePayment.transactions[0].related_resources[0].sale.id}`') Pagamento - cartão de crédito 
            //- p {{ order.totalPrice | formatMoney }}

        //- //- Verify payment complete for credit card.
        //- input#verify-payment-completed.btn-primary(type='button' v-if='status(order) === "aberto" && order.payment.method === "ppp-credit"' @click='verifyPaymentCompleted(order)' value='Verificar se pagamento foi realizado')

        //- //- Items.
        //- h3(v-if='order.items.length > 0') Produtos
        //- ul(v-if='order.items.length > 0')
            //- li(v-for='item in order.items') 
                //- p {{item.name}}
                //- p {{item.quantity}} unidade{{ item.quantity | addS }}
                //- p {{item.price | formatMoney}}

        //- //- Change order status.
        //- .change-status(v-if='order.payment && (status(order) !== "cancelado")')
            //- //- No type (older orders).
            //- .buttons(v-if='order.payment.method === undefined || order.payment.method === "paypal" || order.payment.method === "transfer" || order.payment.method === "ppp-credit"')
                //- input.btn-primary(type='button' v-if='status(order) === "aberto"' @click='showSetStatusWindow("paid")' value='Pedido pago')
                //- input.btn-primary(type='button' v-if='status(order) === "pago"' @click='showSetStatusWindow("shipped")' value='Pedido enviado')
                //- input.btn-primary(type='button' v-if='status(order) === "enviado"' @click='showSetStatusWindow("delivered")' value='Pedido entregue')
            //- //- Money (only motoboy delivery).   
            //- .buttons(v-if='order.payment.method === "money" || order.payment.method === "card-machine"')
                //- input.btn-primary(type='button' v-if='status(order) === "aberto"' @click='showSetStatusWindow("shipped")' value='Pedido enviado')
                //- input.btn-primary(type='button' v-if='status(order) === "enviado"' @click='showSetStatusWindow("delivered")' value='Pedido entregue e pago')
                //- //- input.btn-primary(type='button' v-if='status(order) === "pago"' @click='showSetStatusWindow("delivered")' value='Pedido entregue')

        //- //- Cancel order.
        //- input.btn-danger(type='button' v-if='order.timestamps.placedAt && (status(order) !== "cancelado")' @click='showSetStatusWindow("canceled")' value='Cancelar pedido')            

        //- //- Exit.
        //- //- input.btn-exit(type='button' onclick='window.location.href="/admin/users"' value='Sair') 
        //- input.btn-exit(type='button' onclick='javascript:history.back()' value='Sair') 
        //- //- input.btn-exit(type='button' onclick='window.location.reload(document.referrer);' value='Sair') 

        //- //- Window to return product to stock.
        //- .set-status(v-if='setStatusWindow.show')
            //- .panel
                //- .item
                    //- h3.title {{ setStatusWindow.message }}
                    //- .options(v-if='setStatusWindow.showCheckboxUpdateStock')
                        //- input(type='checkbox' id='updateStock' v-model:checked='setStatusWindow.updateStock')
                        //- label(for='updateStock') Voltar com o produto para o estoque
                //- .buttons
                    //- input.btn-primary(type='button' @click='setStatus()' value='Sim')
                    //- input.btn-exit(type='button' @click='setStatusWindow.show=false' value='Não')

append internal_scripts
    script.
        let order = !{JSON.stringify(order)};
        let zoomOrder = !{JSON.stringify(zoomOrder)};
