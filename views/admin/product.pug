doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(name="viewport" content="width=device-width, initial-scale=1")
    //- link(rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Lato")
    title Zunka - Produto
    link(rel="stylesheet" href="/css/product.css" charset="utf-8")
    //- include ../../dist/icon/sprite2.svg
  body
    #app(v-cloak)
      form(method='post' id='frmProduct')
        //- input(type='hidden' id='_csrf' value=csrfToken)                               
        .field
          label(for='id') Código
          input(type='text' id='id' v-model='product.storeProductId')
        .field
          label(for='title') Título
          input(type='text' id='title' v-model='product.storeProductTitle')
        .field
          label(for='dealer') Fornecedor   
          input(type='text' id='dealer' v-model='product.dealer')   
        .field
          label Imagens 
          .images 
            .wrapper-image(v-for='image, index in product.images')
              img.ui.small.image.product-image(:src='`/img/${product._id}/${image}`')
              .right-arrow(@click='moveImage(index, "r")')
              .left-arrow(@click='moveImage(index, "l")')
              p.delete-image(@click=`deleteImage(index)`) x             
          .upload-image
            label(for='uploadImage') 
              //- svg.icon: use(xlink:href='#ic_file_upload_black_24px')
              svg.icon: use(xlink:href='/icon/sprite.svg#ic_file_upload_black_24px')
              | Carregar imagem(s)
            input(type='file' id='uploadImage' accept='image/*' style='display:none' multiple v-on:change=`uploadImage()`)
            //- label.ui.labeled.icon.button(@click='downloadDealerImages(product)')
        .field
          label(for='detail') Detalhes
          textarea(id='detail' rows='8' v-model='product.storeProductDetail')
        .field
          label(for='description') Descrição
          textarea(id='description' rows='8' v-model='product.storeProductDescription')
        .field
          label(for='tecInfo') Informações técnicas
          textarea(id='tecInfo' rows='8' v-model='product.storeProductTechnicalInformation')
        .field
          label(for='extraInfo') Informações adicionais
          textarea(id='extraInfo' rows='8' v-model='product.storeProductAdditionalInformation')
        .two.fields
          //- maker.
          .field
            label(for='maker') Fabricante
            select(id='maker')
              option(v-for='maker in productMakers' value='maker.value', :selected='maker.name === product.storeProductMaker') {{maker.name}}
          .field
            label(for='category') Categoria
            select(id='category')
              option(v-for='category in productCategories' value='category.value', :selected='category.name === product.storeProductCategory') {{category.name}}
        //- warranty
        .field
          Label Garantia
          .warrant-fields
            .warrant.field(style='flex-grow: 1; flex-basis: 10em')
              label(for='dealerWarrantyDays') Fornecedor (dias)
              input.input-integer(type='text' id='dealerWarrantyDays' v-model='product.dealerProductWarrantyDays', readonly)
            .warrant.field(style='flex-grow: 1; flex-basis: 10em')
              label(for='storeWarrantyDays') Loja (dias)
              input.input-integer(type='text' id='storeWarrantyDays' v-model='product.storeProductWarrantyDays')
            .warrant.field(style='flex-grow: 3; flex-basis: 10em')
              label(for='storeWarratyDetail') Observação
              input(type='text' id='storeWarratyDetail' v-model='product.storeProductWarrantyDetail')
        //- price
        .field
          Label Preço
          .price.fields
            //- Enable discount.
            .price.field.checkbox
              input(type='checkbox' id='discountEnable' v-on:change='calcFinalPrice()', v-model:checked='product.storeProductDiscountEnable')
              label(for='discountEnable') Habilitar desconto
            //- Dealer price.
            .price.field(style='flex-grow: 1;')
              label(for='dealerPrice') Fornecedor (R$)
              input.input-money(type='text' id='dealerPrice' v-model='product.dealerProductPrice', readonly)
            //- Markup.
            .price.field(style='flex-grow: 1;')
              label(for='markup') Lucro (%)
              input.input-money(type='text' id='markup' v-model='product.storeProductMarkup', v-on:input='calcFinalPrice()')
              p(v-if='validation.markup') {{validation.markup}}
            //- Discount config.
            .price.field.select(style='flex-grow: auto;')
              //- Discount value.
              label(for='discount') Desconto
              input.input-money(type='text' id='discount' v-model='product.storeProductDiscountValue', v-on:input='calcFinalPrice()')
              p(v-if='validation.discount') {{validation.discount}}
              //- Discount mode.
              select(v-model='product.storeProductDiscountType' v-on:change='calcFinalPrice()')
                //- input(v-model='product.storeProductDiscountType' type='hidden')
                option(value='%') %
                option(value='R$') R$
            //- Final price.
            .price.field(style='flex-grow: 1;')
              label(for='finalPrice') Valor final (R$)
              input(type='text' id='finalPrice', :value='product.storeProductPrice', readonly)
        .field
          label Status
            .fields
              .field
                label(for='commercialize') Comercializar produto
                input(type='checkbox' id='commercialize' v-model:checked='product.storeProductCommercialize')
              .field
                label(for='stock') Estoque
                  input(type='text' id='stock' v-model='product.dealerProductQtd')
                  | {{product.dealerProductQtd > 1 ? 'Unidades': 'Unidade'}}                   
        .field
          button(type='button' v-on:click='saveProduct()') Save
          button(type='button' onclick='window.location.href="/admin/productList"') Sair
  script.
    let product = !{JSON.stringify(product)};
    let productMakers = !{JSON.stringify(productMakers)};
    let productCategories = !{JSON.stringify(productCategories)};
    let csrfToken = !{JSON.stringify(csrfToken)};
  include ../components/axios.js.pug
  include ../components/vue.js.pug
  script(src='/js/admin/product.js')



