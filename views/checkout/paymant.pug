doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(name="viewport" content="width=device-width, initial-scale=1")
    title Endere√ßos.
    include ../components/paypal.js.pug
    include ../components/bootstrap.css.pug
  body
    include ../navbar.pug
    .container
      .row
        .col-md-12
          h2.text-left Selecionar uma forma de pagamento
          hr
          //- Flash erros.          
          if error
            each err in error
              .alert.alert-danger(role='alert') 
                p.text-center #{err} 
          //- Flash success.
          if success
            each suc in success
              .alert.alert-info(role='alert') 
                p.text-center #{suc}    
            p &nbsp
            p &nbsp
          #paypal-button
          //- form(method='post')
            input(type='hidden' name='_csrf' value=csrfToken)       
            input.btn.btn-success(type='submit' value= 'Paypal')
    include ../components/jquery.js.pug
    include ../components/bootstrap.js.pug      
    script.
      paypal.Button.render({
        env: 'sandbox', // production or sandbox,
        client: {
            sandbox:    'ASpmuFYrAVJcuEiBR5kP8lBdfEJqz4b8hsPQ0fKV7spzkiYFQc2BtA2q7M5vyXTPFuUELBiOpGmfhSZw',
            production: 'xxxxxxxxx'
        },
        commit: true, // Show a 'Pay Now' button
        payment: function(data, actions) {
          return actions.payment.create({
            payment: {
              intent: "sale",
              payer: {
                payment_method: "paypal"
              },
              transactions: [
                {
                  reference_id: 'asdfasdfasdfasdf', // Optional - i will use order _id.
                  amount: {
                    total: "0.05",
                    currency: "BRL",
                    details: {
                      subtotal: "0.05",
                      //- tax: "0.01",
                      shipping: "0.01",
                      //- handling_fee: "0.01",
                      //- shipping_discount: "-0.01",
                      //- insurance: "0.01"
                    }
                  },
                  //- description: "The payment transaction description.",  // The description of what is being paid for.
                  //- custom: "EBAY_EMS_90048630024435",  //  A free-form field for clients' use.
                  //- invoice_number: "48787589673",  // The invoice number to track this payment.
                  //- payment_options: {
                  //-   allowed_payment_method: "INSTANT_FUNDING_SOURCE"
                  //- },
                  //- soft_descriptor: "ECHI5786786",
                  //- purchase_order: 'asdfasdfasdf'  // The purchase order number or ID.
                  "item_list": {
                    "items": [
                      {
                        name: "hat",
                        description: "Brown hat.",
                        quantity: "5",
                        price: "3",
                        tax: "0.01",
                        sku: "1",
                        currency: "BRL"
                      },
                      {
                        name: "handbag",
                        description: "Black handbag.",
                        quantity: "1",
                        price: "15",
                        tax: "0.02",
                        sku: "product34",
                        currency: "BRL"
                      }
                    ],
                    shipping_address: {
                      recipient_name: "Brian Robinson",
                      line1: "4th Floor",
                      line2: "Unit #34",
                      city: "San Jose",
                      country_code: "BR",
                      postal_code: "95131",
                      phone: "011862212345678",
                      state: "CA"
                    }
                  }
                }
              ],
              note_to_payer: "Contact us for any questions on your order.",
              redirect_urls: {
                return_url: "https://localhost:3088/checkout/return",
                cancel_url: "https://localhost:3088/checkout/cancel"
              }
            }            
          });
        },
        // Is called when the buyer approves the payment.
        onAuthorize: function(data, actions) {

            // Make a call to the REST api to execute the payment
            return actions.payment.execute().then(function() {
                window.alert('Payment Complete!');
            });
        }
      }, '#paypal-button');
  style.
