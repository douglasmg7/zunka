extends ../layout/layout

block title
    title Zunka - Forma de envio

block append css
    link(rel="stylesheet" href="/css/checkout/shippingMethod.css?0004" charset="utf-8")

block content 
    section.shadow
        if order.shipping.freights.length > 0
            h2.title Forma de envio
            .form
                .radio
                    each freight, index in order.shipping.freights
                        //- Correios.
                        label
                            input(type='radio' name='freights' id='freightsRadios', value=index onclick='enableBtn()')/ 
                            span !{freight.carrier}
                            ul
                                li= paymentOptionsTexts[index] 
                                li Entrega em !{toDays(freight.deadline)} após a confirmação do pagamento
                                li Valor: R$ !{toBrCurrency(freight.price)}
                    input.btn-primary(type='button' onclick='selectFreight()' id='continue' value='Continuar' disabled)
            #loading.modal-loading
                .panel
                    h2.loading Verificando a disponibilidade dos produtos&nbsp 
        else
            h2.title 
                | Não foi possível exibir uma forma de envio 
                br
                | Verifique se o CEP está correto
            input.btn-primary(type='button' onclick='window.location="/checkout/shipping-address"' value='Voltar')

append internal_scripts
    script.
        let order = !{JSON.stringify(order)};
        let radios = document.getElementsByName('freights');
        let btnContinue = document.getElementById('continue');
        let divLoading = document.getElementById('loading');
        divLoading.style.display = 'none';
        function enableBtn() {
            btnContinue.disabled = false;
        }
        function selectFreight(){
            let selFreightIndex = ""
            for (var i = 0, length = radios.length; i < length; i++) {
                if (radios[i].checked) {
                    selFreightIndex = radios[i].value;
                break;
              }
            }
            if (selFreightIndex == "") {
                btnContinue.disabled = true;
                console.log('block');
                return;
            }
            //- console.log(selFreightIndex);
            divLoading.style.display = 'flex';

            // Process selected freight.
            axios.post(window.location.pathname, {selFreightIndex}, { headers: {'csrf-token' : csrfToken} })
            .then(response => {
                // Validation error.
                if (response.data.err) {
                    window.location.href=`/error?err=${response.data.err}`;
                }
                if (response.data.success) {
                    window.location.href=`/checkout/payment/order/${order._id}`;
                } else {
                    console.log("cart");
                    divLoading.style.display = 'none';
                    // Give time to hide modal-loading.
                    setTimeout(()=>{
                        alert(response.data.message);
                        window.location.href=`/cart`;
                    }, 300);
                }
            })
            .catch(err => {
                window.location.href=`/error?err=${err}`;
            })  
        }

append external_scripts
    include ../components/axios.js.pug
