doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(name="viewport" content="width=device-width, initial-scale=1")
    title Carrinho de compras
    include components/bootstrap.css.pug
  body
    include navbar.pug
    .container
      if cart.products.length == 0
        .row
          .col-md-2
          .col-md-8
            h3: strong Ainda não existem produtos no seu carrinho de compras
          .col-md-2
      else
        .row
          .col-md-12
            h3
              strong Carrinho de compras
        .row
          .col-md-12
            table.table
              thead
                tr
                  td
                  td
                  td Quantidade
                  td Valor unitário
                  td Valor total
              tbody
                each product in cart.products
                  //- tr(class=product._id)
                  tr(data-product_id=product._id)
                    td: a(href='/product/' + product._id): img.product(src='/img/' + product._id +'/' + product.image)
                    td 
                      a.product-title(href='/product/' + product._id) #{product.title}
                      a.remove-product Remover
                    //- td: p.product-qtd #{product.qtd}
                    td.product-qtd
                      .dropdown
                        button.btn.btn-default.dropdown-troggle(type='button' data-toggle='dropdown')
                          span #{product.qtd}
                          span &nbsp&nbsp
                          span.caret
                        ul.dropdown-menu
                          li: a(href='#') 1
                          li: a(href='#') 2
                          li: a(href='#') 3
                          li: a(href='#') 4
                          li: a(href='#') 5
                    td: p.product-price #{formatMoney(product.price)}
                    td: p.product-price #{formatMoney(product.price * product.qtd)}
        .row
          .col-md-12
            H4
              strong Subtotal (#{cart.totalQtd} #{cart.totalQtd > 1 ? 'itens): ' : 'item): '}
              span#subtotal-price #{formatMoney(cart.totalPrice)}
              a.btn.btn-success.checkout(href='/checkout/shipping-address') Continuar
        //- .row
          .col-md-12
            button.btn.btn-primary(type='button') Comprar
        .row
          .col-md-12
            footer
              p O preço e a disponibilidade dos itens na loja estão sujetios a mudanças. O carrinho é um local temporário para guardar a lista de seus ítens e reflete o preço mais recente.
    include components/jquery.js.pug
    include components/bootstrap.js.pug
    script.
      // Format number to money format.
      function formatMoney(val){
        return 'R$ ' + val.toFixed(2).replace('.', ',').replace(/\B(?=(\d{3})+(?!\d))/g, ".");
      }      
      // Change product quantity.
      $('tr').find('.product-qtd').find('a').on('click', function(event){
        let $a = $(event.target);
        let $tr = $a.closest('tr');
        let productQtd = $a.html();
        let productId = $tr.data('product_id');
        //- console.log('qtd: ', productQtd);
        //- console.log('id: ', productId);
        $.ajax({
          method: 'PUT',
          url: 'cart/change-qtd/' + productId + '/' + productQtd,
          data: { _csrf: '#{csrfToken}'}
        })
        .done(function(result){
          // Update quantity selected.
          $a.closest('td').find('button').children().eq(0).html(productQtd);
          // Update product (price * quantity).
          let products = result.cart.products;
          for(let i = 0; i < result.cart.products.length; i++){
            if (products[i]._id === productId) {
              $tr.children().last().prev().children().html(formatMoney(products[i].price));
              $tr.children().last().children().html(formatMoney(products[i].price * products[i].qtd));
              break;
            }
          }
          // Update total price and total quantity.
          $('#subtotal-price')
            .html(formatMoney(result.cart.totalPrice))
            .prev().html('Subtotal (' + result.cart.totalQtd + (result.cart.totalQtd > 1 ? ' itens):&nbsp' : ' item):&nbsp'));
          // Update quantity.
          $('#total-qtd').html(result.cart.totalQtd);
        });        
      });

      // Remove a cart item.
      $('a.remove-product').on('click', function(event){
        // a.remove-product
        let $target = $(event.target);
        let $aTitle = $target.prev();
        let product_id = $target.closest('tr').data('product_id');
        $.ajax({
          method: 'PUT',
          url: 'cart/remove/' + product_id,
          data: { _csrf: '#{csrfToken}'}
        })
        .done(function(result){
          // Update title.
          $target.closest('tr').html(
            $('<td class="product-removed" colspan="5"></td>')
              .append($aTitle.removeClass('product-title'))
              .append('<span> Foi removido do carrinho de compras. </span>')
          );
          // Update price and quantity.
          $('#subtotal-price')
            .html(formatMoney(result.cart.totalPrice))
            .prev().html('Subtotal (' + result.cart.totalQtd + (result.cart.totalQtd > 1 ? ' itens):&nbsp' : ' item):&nbsp'));
          // Update quantity.
          $('#total-qtd').html(result.cart.totalQtd);
        });
      });
    style.
      #subtotal-price{
        color: green;
        font-weight: bold;
      }
      img.product{
        max-width: 100px;
        height: auto;
      }
      footer p {
        font-size: .9em;
      }
      a.product-title {
        display: block;
        text-decoration: none;
      }
      a.remove-product {
        font-size: .9em;
        cursor: pointer;
      }
      p.product-price,
      p.product-qtd,
      a.product-title {
        font-size: 1.2em;
        padding-top: .6em;
      }
      p.product-price,
      p.product-qtd {
        color: green;
      }
      .product-removed {
        font-size: .9em;
      }
      a.checkout {
        margin-left: 2em;
      }

